<?php

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;

// Hide content in front page.
function bootstrap_child_preprocess_container(&$variables) {
	if (!array_key_exists('element', $variables)){
		return;
	}
	if (!array_key_exists('#name', $variables['element'])){
		return;
	}
	if ('frontpage' == $variables['element']['#name']){
		$variables['attributes']['class'] = [];
	}
}


/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
function bootstrap_child_preprocess_page_title(&$variables) {
	$routeName = \Drupal::routeMatch()->getRouteName();

	/////////////////////////////////////////
	//              Login Page             //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

	if($routeName == 'user.login') {
		$variables['title'] = t('Login Page');
	}

	/////////////////////////////////////////
	//              Login Page             //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////

}

function bootstrap_child_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id){

	/////////////////////////////////////////
	//              Login Page             //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

	$configRulesTitle = 'au moins 8 caractères comprenant :';
	$configRules = array(
		'au moins 1 caractère spécial (!?$%@#&|^µ:/;.£)',
		'au moins 1 caractère majuscule (A,B,C...)',
		'au moins 1 caractère minuscule (a,b,c...)',
		'au moins 1 caractère numérique (1,2,3...)',
		'pas le prénom ou le nom de l\'utilisateur'
	);

	$rulesContent = '<p>'.$configRulesTitle.'</p>';
	$rulesContent .= '<ul>';
	foreach ($configRules as $configRule) {
		$rulesContent .= '<li class="item-rule-form-login">'.$configRule.'</li>';
	}
	$rulesContent .= '</ul>';

	// On ajoute nos règles de validation dans la description du champs password
	$form['pass']['#description'] = $rulesContent;

	// On ajoute la librairie pour cette page
	$form['#attached']['library'] = 'bootstrap_child/login';

	/////////////////////////////////////////
	//              Login Page             //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////

}

/**
 * Implements hook_theme().
 */
function bootstrap_child_theme($existing, $type, $theme, $path){
	return [
		// Tests D8
		'test_d8_result' => [
			'template' => 'test-d8-result',
			'variables' => ['test_theme' => NULL, 'test_score' => NULL]
		],
		'chart_tests_drupal8' => [
			'template' => 'chart-tests-drupal8',
			'variables' => ['data' => NULL]
		],
		'timer_qcm_test_drupal8' => [
			'template' => 'timer-qcm-test-drupal8',
			'variables' => ['data' => NULL]
		]
		// fin Tests D8
	];
}


/**
 * Implements hook_page_attachments_alter().
 */
function bootstrap_child_page_attachments_alter(array &$attachments){
	$routeName = \Drupal::routeMatch()->getRouteName();

	// Tests D8
	if ($routeName == 'test_drupal8.qcm' ||
		$routeName == 'test_drupal8.qcm.result' ||
		$routeName == 'view.tests_drupal_8.list_tests_d8__role_drupalien' ||
		$routeName == 'view.tests_drupal_8.instructions_avant_tests_d8__role_drupalien' ||
		$routeName == 'entity.user.canonical' ||
		substr($routeName, 0, 26) == 'view.classement.classement'
	) {
		$attachments['#attached']['library'][] = 'bootstrap_child/test-drupal8-styles';
	}
	if ($routeName == 'test_drupal8.qcm') {
		$attachments['#attached']['library'][] = 'bootstrap_child/test-drupal8-qcm';
	}
	if ($routeName == 'entity.user.canonical') {
		$attachments['#attached']['library'][] = 'bootstrap_child/tests-drupal8-dashboard';
	}
	if ($routeName == 'view.classement.classement__2_roles__theme__testd8') {
		$attachments['#attached']['library'][] = 'bootstrap_child/tests-drupal8-classement-par-theme';
	}
	// fin Tests D8

	/////////////////////////////////////////
	//          Competencies File          //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

  if ($routeName == 'entity.user.canonical') {
    $attachments['#attached']['library'][] = 'bootstrap_child/user-account';
  }

	/////////////////////////////////////////
	//          Competencies File          //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////

	// Frontpage manager
	if ($routeName == 'view.frontpage.page_1') {
		$attachments['#attached']['library'][] = 'bootstrap_child/frontpage-manager';
	}
}



/**
 * Implements hook_form_alter().
 */
function bootstrap_child_form_alter(&$form, FormStateInterface $form_state, $form_id) {
	/////////////////////////////////////////
	//              Login Page             //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

	# ajoute ckeditor à la vue "instructions avant le test" (Tests D8)
	if ($form_id == 'views_ui_config_item_form' && !empty($form['options']['content'])) {
		$form['options']['content']['#editor'] = TRUE;
	}

	/////////////////////////////////////////
	//              Login Page             //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////
}



function bootstrap_child_preprocess_node(&$variables){

  $contentType 	= $variables['node']->getType();
  $nodeTitle 		= $variables['node']->getTitle();
  $routeName    = \Drupal::routeMatch()->getRouteName();
  $themePath 		= drupal_get_path('theme', 'bootstrap_child');

	/////////////////////////////////////////
	//          Competencies File          //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

  if ( $contentType == 'competencies_file' && $routeName == 'entity.node.canonical' ) {
    $limiter = ' - ';
    $parts = explode($limiter,$nodeTitle);

    $variables['new_element']['field_competencies_file_dc'] = array(
      '#type' => 'html_tag',
      '#tag' => 'h1',
      '#value' => array_shift($parts),
      '#attributes' => array(
        'id' => 'print_dc'
      )
    );

    $variables['new_element']['field_competencies_file_consultant_identity'] = array(
      '#type' => 'html_tag',
      '#tag' => 'p',
      '#value' => implode($limiter, $parts),
      '#attributes' => array(
        'id' => 'print_identity'
      )
    );

    $variables['path_logo'] = '/'.$themePath.'/images/logo_ausy.png';
  }

	/////////////////////////////////////////
	//          Competencies File          //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////

}


function bootstrap_child_theme_suggestions_alter(array &$suggestions, array $variables, $hook){

	$routeName = \Drupal::routeMatch()->getRouteName();

	// Tests D8
	if (
		('views_view' == $hook || 'views_view_table' == $hook || 'views_view_field' == $hook) &&
		isset($variables['view']->current_display) &&
		method_exists($variables['view'], 'id')
	){
		array_unshift($suggestions, $hook . '__' . $variables['view']->id() . '__' . $variables['view']->current_display);
	}
	// fin Tests D8

	/////////////////////////////////////////
	//          Competencies File          //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

	// Add Templates Suggestions for competencies file field
	// of type entity reference revisions
	if ( $hook == "field" && isset($variables['element']) ) {
		$element = $variables['element'];
		if ($element['#field_type'] == "entity_reference_revisions" && $element['#bundle'] == 'competencies_file') {
			// Example : 'field--node--comptencies_file--field--ptype'
			$suggestions[] = $hook.'__'.$element['#entity_type'].'__'.$element['#bundle'].'__'.$hook.'__'.'ptype';
		}
	}

	/////////////////////////////////////////
	//          Competencies File          //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////

	/////////////////////////////////////////
	//               NEWS D8               //
	//            Custom Actions           //
	//                START                //
	/////////////////////////////////////////

	// Add Templates Suggestions for news d8 row
	if ( 'views_view_unformatted' == $hook  && 'view.view_news_d8.page_des_actualites__role_drupalien' == $routeName ) {
		$suggestions[] = str_replace('.', '_', str_replace('.view', '.view_row', $routeName));
	}



	/////////////////////////////////////////
	//               NEWS D8               //
	//            Custom Actions           //
	//                 END                 //
	/////////////////////////////////////////


  // Parti Login Start

	// if($routeName == 'user.login' && isset($variables['elements']) && $variables['elements']['#plugin_id'] == 'page_title_block') {
	// 	$suggestions[] = $hook.'__'.$variables['elements']['#plugin_id'].'__'.'login_page';
	// }

  // Parti Login End

}





